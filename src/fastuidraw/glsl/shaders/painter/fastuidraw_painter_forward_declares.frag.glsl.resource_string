/*!
 * \file fastuidraw_painter_forward_declares.frag.glsl.resource_string
 * \brief file fastuidraw_painter_forward_declares.frag.glsl.resource_string
 *
 * Copyright 2018 by Intel.
 *
 * Contact: kevin.rogovin@gmail.com
 *
 * This Source Code Form is subject to the
 * terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with
 * this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 *
 * \author Kevin Rogovin <kevin.rogovin@gmail.com>
 *
 */

void
fastuidraw_read_header(in uint location, out fastuidraw_header h);


/* needed functions */
#if defined(FASTUIDRAW_RENDER_TO_COLOR_BUFFER)
  vec4
  fastuidraw_run_frag_shader(in uint frag_shader, in uint frag_shader_data_location);

  vec4
  fastuidraw_run_brush_frag_shader(in uint frag_shader, in uint frag_shader_data_location);

  #ifdef FASTUIDRAW_PAINTER_BLEND_SINGLE_SRC_BLEND
    void
    fastuidraw_run_blend_shader(in uint blend_shader, in uint blend_shader_data_location,
                                    in vec4 in_src, out vec4 out_src);
  #endif

  #ifdef FASTUIDRAW_PAINTER_BLEND_DUAL_SRC_BLEND
    void
    fastuidraw_run_blend_shader(in uint blend_shader, in uint blend_shader_data_location,
                                    in vec4 color0, out vec4 src0, out vec4 src1);
  #endif

  #if defined(FASTUIDRAW_PAINTER_BLEND_FRAMEBUFFER_FETCH) || defined(FASTUIDRAW_PAINTER_BLEND_INTERLOCK)
    void
    fastuidraw_run_blend_shader(in uint blend_shader, in uint blend_shader_data_location,
                                    in vec4 in_src, in vec4 in_fb, out vec4 out_src);
  #endif

#else

  float
  fastuidraw_run_frag_shader(in uint frag_shader, in uint frag_shader_data_location);

#endif

void
fastuidraw_compute_image_atlas_coord(in vec2 image_shader_coord,
                                     in uint index_layer,
                                     in uint num_lookups,
                                     in uint slack,
                                     out vec2 image_atlas_coord,
                                     out uint image_atlas_layer);
