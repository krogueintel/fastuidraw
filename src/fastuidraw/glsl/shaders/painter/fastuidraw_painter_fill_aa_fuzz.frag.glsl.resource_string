/*!
 * \file fastuidraw_painter_fill_aa_fuzz.frag.glsl.resource_string
 * \brief file fastuidraw_painter_fill_aa_fuzz.frag.glsl.resource_string
 *
 * Copyright 2018 by Intel.
 *
 * Contact: kevin.rogovin@gmail.com
 *
 * This Source Code Form is subject to the
 * terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with
 * this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 *
 * \author Kevin Rogovin <kevin.rogovin@gmail.com>
 *
 */
#ifdef FASTUIDRAW_RENDER_TO_COLOR_BUFFER
vec4
#else
float
#endif
fastuidraw_gl_frag_main(in uint sub_shader,
                        inout uint shader_data_block)
{
  #if defined(FASTUIDRAW_RENDER_TO_COLOR_BUFFER) && defined(FASTUIDRAW_STROKING_USE_DEFFERRED_COVERAGE)
    {
      return vec4(fastuidraw_read_deferred_coverage_buffer);
    }
  #elif defined(FASTUIDRAW_STROKING_USE_DEFFERRED_COVERAGE)
    {
      float dd, q, alpha;

      q = 1.0 - fastuidraw_aa_fuzz;
      dd = max(q, fwidth(q));
      alpha = q / dd;
      return alpha;
    }
  #endif
}
