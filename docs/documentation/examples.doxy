/*!
  \page ex_framework Example FrameWork
  \brief Framework used by examples to bring up a window and GL context via SDL2.

  The example framework's sole purpose is to impement via SDL2,
  the boiler plate code to:
    - Create a window
    - Create a GL context and make it current
    - Provide an interface to handle events
    - Provide an interface to draw a frame
    - at dtor, destroy GL context and window

  FastUIDraw is not tied to a particular windowing system at all. FastUIDraw
  can work with other frameworks (for example Qt) that handle window creation
  and event handling.

  The interface is defined by:
  \snippet demo_framework.hpp ExampleFramework

  The implementation is given by:
  \snippet demo_framework.cpp ExampleFramework
*/

/*!
  \page ex_initialization Example Initialization
  \brief Example code that shows how to create a Painter and to use the GL backend.

  The \ref ex_initialization builds from \ref ex_framework to demonstrate
  how to initialize FastUIDraw's GL (or GLES) backend and to create a
  fastuidraw::Painter object.

  The interface is defined by:
  \snippet initialization.hpp ExampleInitialization

  The implementation is given by:
  \snippet initialization.cpp ExampleInitialization

  An example make file using pkg-config to build this example is given by:
  \verbinclude Makefile
 */

/*!
  \page ex_gradient Example Gradient
  \brief Simple example showing how to use \ref fastuidraw::PainterBrush to render gradients.

  The \ref ex_gradient builds from \ref ex_initialization to demonstrate
  how to use \ref fastuidraw::PainterBrush to render gradients.

  The implementation is given by:
  \snippet example_gradient.cpp ExampleGradient
*/

/*!
  \page ex_image Example Image
  \brief Simple example showing how to use \ref fastuidraw::PainterBrush to render an image.

  The \ref ex_image builds from \ref ex_initialization to demonstrate
  how to use \ref fastuidraw::PainterBrush to render an image.

  A fastuidraw::Image requires a pixel data specified by a class derived from
  \ref fastuidraw::ImageSourceBase to be realized. In this example we also
  implement an example of \ref fastuidraw::ImageSourceBase that relies on SDL2_image
  to load the image data.

  The implementation of drawing an is given by:
  \snippet example_image.cpp ExampleImage

  The interface for loading an image is given by:
  \snippet image_loader.hpp ExampleImage

  The implementation for loading an image is given by:
  \snippet image_loader.cpp ExampleImage
*/

/*!
  \page ex_text Example Text
  \brief Simple example showing how to use \ref fastuidraw::GlyphSequence to render text.

  The \ref ex_text builds from \ref ex_initialization to demonstrate
  how to construct and use \ref fastuidraw::GlyphSequence to render
  text with \ref fastuidraw::Painter.

  The implementation is given by:
  \snippet example_text.cpp ExampleText
*/

/*!
  \page ex_path Example Path
  \brief Simple example showing how to use \ref fastuidraw::Path to stroke and fill paths.

  The \ref ex_path builds from \ref ex_initialization to demonstrate
  how to construct and use \ref fastuidraw::Path to stroke and fills
  paths with \ref fastuidraw::Painter.

  The implementation is given by:
  \snippet example_path.cpp ExamplePath
*/

/*!
  \page ex_path2 Example Path 2
  \brief
  Simple example showing how to operator<< overloads to construct a complicated path
  and to fill it with a custom fill rule.

  The \ref ex_path2 builds from \ref ex_initialization to demonstrate
  how to construct a \ref fastuidraw::Path using operator<< overloads
  and to fill it with a custom fill rule.

  The implementation is given by:
  \snippet example_path2.cpp ExamplePath2
*/

/*!
  \page ex_custom_brush Example Custom Brush
  \brief
  Example on how to create a custom-brush that builds from teh standard brush.

  The \ref ex_custom_brush builds from \ref ex_initialization to demonstrate
  how to create a custom-brush that builds from the standard brush. The
  example custom is implemented by modifying in the fragment shader the brush
  position fed to the standard brush.

  A custom brush is defined essentially by two elements: a shader and data to
  feed the shader. The shader is represented by \ref fastuidraw::PainterBrushShader
  and the data to feed it is represented by \ref fastuidraw::PainterBrushShaderData.
  The data represents the small amount of data that the shader unpacks from the
  data store.

  Using the symbols documented in \ref GLSLBuiltInShaders, the implementation
  of the data used by the custom brush and the shader
  for it is given by \snippet example_custom_brush.cpp ExampleCustomBrushDefining

  The implementation of using the custom brush is given by
  \snippet example_custom_brush.cpp ExampleCustomBrushUsing
*/

/*!
 * \page ex_packed_value Example Packed Value
 * \brief
 * Example of using \ref fastuidraw::PainterPackedValue and using the
 * coordinate transformation interface of \ref fastuidraw::Painter
 *
 * The \ref ex_packed_value builds from \ref ex_initialization to demonstrate
 * how to use and create \ref fastuidraw::PainterPackedValue objects
 * to allow FastUIDraw to resuse \ref fastuidraw::PainterBrushShaderData
 * that is common across many calls to \ref fastuidraw::Painter draw methods.
 * In addition, it also provides an example of using some the coordinate
 * transformation methods of \ref fastuidraw::Painter along with saving and
 * restoring its state via \ref fastuidraw::Painter::save() and \ref
 * fastuidraw::Painter::restore().
 *
 * The code is given by
 * \snippet example_packed_value.cpp ExamplePackedValue
 *
 */

/*!
 * \page ex_custom_stroking_shader Example Custom Stroking Shader
 * \brief
 * Example of using the shader-chaining interface to create a
 * custom strok shader that applies an animated wave effect
 * entirely within the shader.
 *
 * Using the symbols documented in \ref GLSLBuiltInShaders, the
 * implementation of the custom shader and data is given by
 * \snippet example_custom_path_shading.cpp ExampleCustomPathShaderDefining
 *
 * The implementation of using the custom stroking is given by
 * \snippet example_custom_path_shading.cpp ExampleCustomPathShading
 */
